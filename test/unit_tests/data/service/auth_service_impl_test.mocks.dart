// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_auth/test/unit_tests/data/service/auth_service_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:flutter_auth/data/auth/data_source/auth_api_data_source.dart'
    as _i6;
import 'package:flutter_auth/data/auth/mapper/auth_user_dto_to_auth_user_mapper.dart'
    as _i11;
import 'package:flutter_auth/data/auth/mapper/user_data_list_dto_to_user_data_mapper.dart'
    as _i13;
import 'package:flutter_auth/data/auth/model/auth_user_credentials_dto.dart'
    as _i8;
import 'package:flutter_auth/data/auth/model/auth_user_dto.dart' as _i2;
import 'package:flutter_auth/data/auth/model/user_data_list_dto.dart' as _i3;
import 'package:flutter_auth/data/auth/model/user_id_token_dto.dart' as _i10;
import 'package:flutter_auth/data/auth/model/user_profile_credentials_dto.dart'
    as _i9;
import 'package:flutter_auth/domain/auth/model/auth_user.dart' as _i4;
import 'package:flutter_auth/domain/auth/model/user_data.dart' as _i5;
import 'package:flutter_auth/domain/auth/store/token_store.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthUserDto_0 extends _i1.Fake implements _i2.AuthUserDto {}

class _FakeUserDataListDto_1 extends _i1.Fake implements _i3.UserDataListDto {}

class _FakeAuthUser_2 extends _i1.Fake implements _i4.AuthUser {}

class _FakeUserData_3 extends _i1.Fake implements _i5.UserData {}

/// A class which mocks [AuthApiDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApiDataSource extends _i1.Mock implements _i6.AuthApiDataSource {
  MockAuthApiDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> signUp(_i8.AuthUserCredentialsDto? userCredentials) =>
      (super.noSuchMethod(Invocation.method(#signUp, [userCredentials]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<_i2.AuthUserDto> loginWithEmail(
          _i8.AuthUserCredentialsDto? userCredentials) =>
      (super.noSuchMethod(Invocation.method(#loginWithEmail, [userCredentials]),
              returnValue: Future<_i2.AuthUserDto>.value(_FakeAuthUserDto_0()))
          as _i7.Future<_i2.AuthUserDto>);
  @override
  _i7.Future<void> setUserName(
          _i9.UserProfileCredentialsDto? userProfileCredentialsDto) =>
      (super.noSuchMethod(
          Invocation.method(#setUserName, [userProfileCredentialsDto]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<_i3.UserDataListDto> getUserData(
          _i10.UserIdTokenDto? userIdTokenDto) =>
      (super.noSuchMethod(Invocation.method(#getUserData, [userIdTokenDto]),
              returnValue:
                  Future<_i3.UserDataListDto>.value(_FakeUserDataListDto_1()))
          as _i7.Future<_i3.UserDataListDto>);
}

/// A class which mocks [AuthUserDtoToAuthUserMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthUserDtoToAuthUserMapper extends _i1.Mock
    implements _i11.AuthUserDtoToAuthUserMapper {
  MockAuthUserDtoToAuthUserMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthUser call(_i2.AuthUserDto? dto) =>
      (super.noSuchMethod(Invocation.method(#call, [dto]),
          returnValue: _FakeAuthUser_2()) as _i4.AuthUser);
}

/// A class which mocks [TokenStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenStore extends _i1.Mock implements _i12.TokenStore {
  MockTokenStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> saveToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#saveToken, [token]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> saveRefreshToken(String? refreshToken) =>
      (super.noSuchMethod(Invocation.method(#saveRefreshToken, [refreshToken]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<bool> hasToken() =>
      (super.noSuchMethod(Invocation.method(#hasToken, []),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<String?> getTokenOrNull() =>
      (super.noSuchMethod(Invocation.method(#getTokenOrNull, []),
          returnValue: Future<String?>.value()) as _i7.Future<String?>);
  @override
  _i7.Future<String?> getRefreshTokenOrNull() =>
      (super.noSuchMethod(Invocation.method(#getRefreshTokenOrNull, []),
          returnValue: Future<String?>.value()) as _i7.Future<String?>);
}

/// A class which mocks [UserDataListDtoToUserDataMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDataListDtoToUserDataMapper extends _i1.Mock
    implements _i13.UserDataListDtoToUserDataMapper {
  MockUserDataListDtoToUserDataMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.UserData call(_i3.UserDataListDto? dto) =>
      (super.noSuchMethod(Invocation.method(#call, [dto]),
          returnValue: _FakeUserData_3()) as _i5.UserData);
}
